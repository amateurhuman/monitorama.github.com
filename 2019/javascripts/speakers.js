var rawSpeakers = {
  "pdx": [
    {
      "name": "John Allspaw",
      "github": "jallspaw",
      "gitlab": "",
      "twitter": "allspaw",
      "bio": "John Allspaw has worked in software systems engineering and operations for over twenty years in many different environments. John’s publications include the books The Art of Capacity Planning (2009) and Web Operations (2010) as well as the forward to \"The DevOps Handbook.\" His 2009 Velocity talk with Paul Hammond, \"10+ Deploys Per Day: Dev and Ops Cooperation\" helped start the DevOps movement. John served as CTO at Etsy, and holds an MSc in Human Factors and Systems Safety from Lund University.",
      "title": "Taking Human Performance Seriously In Software",
      "abstract": "",
      "video": "https://vimeo.com/341144396",
      "slides": "https://github.com/jallspaw/MonitoramaPDX2019/",
      "hash": "393c4d3cf4315a211e04f2a85abe7822"
    },
    {
      "name": "Quintessence Anx",
      "github": "quintessence",
      "gitlab": "",
      "twitter": "QuintessenceAnx",
      "bio": "Quintessence has worked in the IT community for over 10 years, including as a database administrator and a DevOps / Cloud / Infrastructure engineer. She was a core contributor to Stark & Wayne's SHIELD project, which adds backup functionality to Cloud Foundry, as well as a technical reviewer for Learning Go Programming published by Packt Publishing. Currently she is the US Developer Advocate for Logz.io, focusing community engagement related to DevOps. Outside of work she is a leader and co-founder of Inclusive Tech Buffalo to help underrepresented minorities in tech launch careers in development.",
      "title": "Sensory Friendly Monitoring",
      "abstract": "",
      "video": "https://vimeo.com/341147882",
      "slides": "https://noti.st/quintessence/xupmYc/sensory-friendly-monitoring-keeping-the-noise-down",
      "hash": "fccb008ca5383fd91f2af2cd729b5f7e",
    },
    {
      "name": "Dave Cadwallader",
      "github": "geekdave",
      "gitlab": "",
      "twitter": "geek_dave",
      "bio": "Dave is a Site Reliability Architect at DNAnexus, where on a daily basis, he enjoys geeking out at the intersection of bioinformatics and cloud computing. Dave lives in Colorado with his wife and two kids, and enjoys hiking and playing the drums.",
      "title": "Explain it Like I’m Five - What I Learned Teaching Observability to My Kids",
      "abstract": "",
      "video": "https://vimeo.com/341142428",
      "slides": "https://speakerdeck.com/geekdave/eli5-what-i-learned-teaching-observability-to-my-kids",
      "hash": "0293ac60b3127ed135d1a98619fc5669",
    },
    {
      "name": "David Calavera",
      "github": "calavera",
      "gitlab": "",
      "twitter": "calavera",
      "bio": "David Calavera is the CTO of Netlify where he and his team are building the best platform for deploying and automating modern web projects. Before that, he was a core member of the Docker Engine project, where he helped developers build the container engine that started the container revolution. David also built enterprise tools for GitHub and has contributed to numerous open source projects, such us Go, JRuby and many others.",
      "title": "Observability and Performance Analysis with BPF",
      "abstract": "",
      "video": "https://vimeo.com/341143197",
      "slides": "",
      "hash": "e4e3786e5f54bdc459764759f021f060",
    },
    {
      "name": "Evan Chan",
      "github": "velvia",
      "gitlab": "",
      "twitter": "Evanfchan",
      "bio": "Evan has been a distributed systems / data / software engineer for twenty years. His current passion is time series and data systems that can process millions of records per second PER NODE and simultaneously answer a large number of concurrent queries per second. He has led the design and implementation of multiple big data platforms based on Apache Storm, Spark, Kafka, Cassandra, and Scala/Akka. He has been an active contributor to the Apache Spark project, and a two-time Datastax Cassandra MVP. Open source, conferences, Matthew 25:40.",
      "title": "Rich Histograms at Scale: A New Hope",
      "abstract": "",
      "video": "",
      "slides": "https://www.slideshare.net/EvanChan2/histograms-at-scale-monitorama-2019",
      "hash": "88a87471099c04e7be3f8e568a41537a",
    },
    {
      "name": "Ross Delinger",
      "github": "rossdylan",
      "gitlab": "",
      "twitter": "helixoide",
      "bio": "Ross is an SRE at Dropbox and leads the Reliability-Frameworks team, which is building a distributed tracing solution. Prior to that Ross worked on a variety of observability and service infrastructure tooling on the Traffic team at Dropbox.",
      "title": "Tracing at Dropbox: A Story of Incremental Improvements",
      "abstract": "",
      "video": "https://vimeo.com/341148136",
      "slides": "https://www.dropbox.com/s/457ya2zp50be0nw/Evolving%20Distributed%20Tracing%20at%20Dropbox.pdf",
      "hash": "dda2fda09676d2f8bee4c6c76e25d5f0",
    },
    {
      "name": "Luke Demi",
      "github": "lukedemi",
      "gitlab": "",
      "twitter": "luke_demi_",
      "bio": "Luke Demi is a Software Engineer at Coinbase. Currently, he's excited about bootstrapping reliability culture, serverless observability, and database storage engines. In his spare time he enjoys weighing out backpacking gear and competing against San Francisco Strava segments.",
      "title": "Logs, Metrics, and the Evolution of Observability at Coinbase",
      "abstract": "",
      "video": "https://vimeo.com/341145849",
      "slides": "",
      "hash": "c67d16dc7d4be109c23a5babcee5f1d5",
    },
    {
      "name": "Jaana B. Dogan",
      "github": "rakyll",
      "gitlab": "",
      "twitter": "rakyll",
      "bio": "Jaana B. Dogan is working on latency analysis projects at Google. Previously, she worked on the Go project. She has a decade-long experience in building developer platforms and tools.",
      "title": "A Story of OpenTracing and OpenCensus",
      "abstract": "",
      "video": "https://vimeo.com/341143631",
      "slides": "",
      "hash": "5ef6ff454a561e34bebfcaa3ef12a738",
    },
    {
      "name": "Nida Farrukh",
      "github": "",
      "gitlab": "",
      "twitter": "",
      "bio": "Nida is a Software Engineer with over 9 years of experience at Google in Switzerland. She has extensive experience working with and being on-call for large-scale systems designed to serve hundreds of thousands of user requests per second. Concretely, she has expertise in monitoring and load-testing, and has spearheaded efforts in these areas to make related tools and processes as simple, automatic, and widely-applicable as possible. Nida has a track record of safely executing invasive changes to complex, long-standing systems without compromising service availability.",
      "title": "The Power and Creativity of Postmortem Repair Items",
      "abstract": "Outages suck. But at least we learn from them! One of the great things about outages is that they’re a compelling argument for change. And a compelling demonstration of what needs changing. And they even bring their own stats on what we stand to lose if we don’t change!</br></br>So a postmortem is a neat little package argument for doing the repair items it suggests. Don’t squander this opportunity on repair items that just paper over problems. Really dig in - you’ve been given a window into how your system functions (and mis-functions), which you can use to revisit prior architecture decisions and inform your future design. Take advantage of the data that’s fallen into your lap! Champion incisive change, one repair item at a time!",
      "video": "https://vimeo.com/341146993",
      "slides": "https://drive.google.com/file/d/1Or538WjDD8hkwN4yIMV44EismicHwpYb/view",
      "hash": "c59a0850e6a3134342cc1db31308f82a",
    },
    {
      "name": "Sergey Fedorov",
      "github": "sfedr",
      "gitlab": "",
      "twitter": "sfedov",
      "bio": "Sergey is an early member of the Open Connect CDN team at Netflix, which has become one of the biggest providers of content on the Internet. Sergey helped build infrastructure to monitor Netflix's streaming experience. Lately, he has switched focus to client-AWS interactions - making Netflix API requests faster, more reliable, and easier to manage. He keeps learning new things about the impact of network conditions on user experience, request performance, and system architecture. Sergey is also an author and maintainer of FAST.com - one of the most popular Internet speed tests.</br></br>Finding actionable signals in loosely controlled environments is what keeps Sergey awake, much better than caffeine. This might also explain why outside of work Sergey can be seen playing ice hockey, brewing beer, or exploring exotic travel destinations.",
      "title": "What can network teach you about your service?",
      "abstract": "",
      "video": "https://vimeo.com/341148870",
      "slides": "http://bit.ly/sfedorov-monitorama-pdx-19",
      "hash": "ea81944f0da061e9a58c68041b4ab60f",
    },
    {
      "name": "Liz Fong-Jones",
      "github": "lizthegrey",
      "gitlab": "",
      "twitter": "lizthegrey",
      "bio": "Liz is a developer advocate, labor and ethics organizer, and Site Reliability Engineer (SRE) with 15+ years of experience. She is an advocate at Honeycomb.io for the SRE and Observability communities, and previously was an SRE working on products ranging from the Google Cloud Load Balancer to Google Flights.</br></br>She lives in Brooklyn with her wife, metamours, and a Samoyed/Golden Retriever mix, and in San Francisco and Seattle with her other partners. She plays classical piano, leads an EVE Online alliance, and advocates for transgender rights as a board member of the National Center for Transgender Equality.",
      "title": "Tradeoffs on the Road to Observability",
      "abstract": "",
      "video": "https://vimeo.com/341145526",
      "slides": "https://drive.google.com/file/d/1S7_TAGBzI50oGX7gOU_Enbfk25UY6FnJ/view?usp=sharing",
      "hash": "3a97f9de48279f72c0422724024d57b8",
    },
    {
      "name": "Aysylu Greenberg",
      "github": "aysylu",
      "gitlab": "",
      "twitter": "aysylu22",
      "bio": "Aysylu Greenberg is a Sr Software Engineer at Google working on infrastructure. In her spare time, she ponders the design of systems that deal with inaccuracies, enthusiastically reads CS research papers, and dances.",
      "title": "Software Supply Chain Observability with Grafeas and Kritis",
      "abstract": "Software Supply Chain is a collective term used to describe the continuous integration and delivery pipelines. In addition, it refers to the observability tools that track what happens to a piece of code from the moment it’s in the source code to when it gets deployed, and everywhere in between. Grafeas is an open-source artifact metadata API to audit and govern your software supply chain. It's built as an industry standard for storing and retrieving metadata about software resources. Kritis is an open-source solution for securing your software supply chain for Kubernetes applications. It enforces deploy-time security policies using Grafeas.",
      "video": "https://vimeo.com/341141726",
      "slides": "https://www.slideshare.net/aysylu/software-supply-chain-observability-with-grafeas-and-kritis",
      "hash": "e325101665b04328c842d9bf74490d56",
    },
    {
      "name": "Piotr Holubowicz",
      "github": "",
      "gitlab": "",
      "twitter": "",
      "bio": "Piotr is a Site Reliability Engineer on the Photos team at Google. He likes to work on monitoring and alerting, and making sure the qps stays high, the errors stay low, and the SLOs are green all around. In his spare time he enjoys traveling and occasional cross country running with a compass and a map.",
      "title": "A story of one SLO",
      "abstract": "",
      "video": "https://vimeo.com/341147610",
      "slides": "",
      "hash": "297dc6bd8754b5413880207716139436",
    },
    {
      "name": "Kenny Johnston",
      "github": "",
      "gitlab": "kencjohnston",
      "twitter": "kencjohnston",
      "bio": "Kenny started his career in political campaigns before returning to his educational background in computer engineering. He has experience with large open-source initiatives through his time working in the early days of OpenStack for HPE and Rackspace. Kenny product manages devops tools aimed at providing easy operational management of complex systems at GitLab. In his spare time, Kenny enjoys building puzzles with his two young children, playing boardgames with his partner, kicking the soccer ball around and learning new cooking techniques. Here's a link to Kenny's <a href=\"https://gitlab.com/kencjohnston/README/blob/master/README.md\">README</a>.",
      "title": "Automation + Artisanship: the Future of Runbooks",
      "abstract": "",
      "video": "https://vimeo.com/341144765",
      "slides": "https://gitlab.com/kencjohnston/presentations/blob/master/Automation+Artisanship/SLIDES-Automation+Artisanship.pdf",
      "hash": "d647cfc7bc705c66c02eb7e406ee9e63",
    },
    {
      "name": "Nora Jones",
      "github": "",
      "gitlab": "",
      "twitter": "nora_js",
      "bio": "Nora Jones practices chaos engineering and human factors at Slack and is a student of human factors and systems safety at Lund University. She’s passionate about resilient software, people, and the intersection of those two worlds. She cowrote the book on chaos engineering with her teammates while working at Netflix and keynoted at AWS re:Invent in 2017 to an audience of over 40,000 people about the technical benefits and business case behind implementing chaos engineering.",
      "title": "Chaos Engineering Traps",
      "abstract": "",
      "video": "https://vimeo.com/341147287",
      "slides": "",
      "hash": "134967b8b202a412320747801eacf92f",
    },
    {
      "name": "Dave Josephsen",
      "github": "djosephsen",
      "gitlab": "",
      "twitter": "DaveJosephsen",
      "bio": "Dave is an Observability Engineer at Fastly and was like totally speaking at Monitorama before it was cool.",
      "title": "Schema On Read and the New Logging Way",
      "abstract": "",
      "video": "https://vimeo.com/341142828",
      "slides": "",
      "hash": "544b820dca6b1b9450e57882cf600c75",
    },
    {
      "name": "Prasad Konduri",
      "github": "",
      "gitlab": "",
      "twitter": "",
      "bio": "Prasad has been with Capital One for over 2 1/2 years and a leader in Enterprise Observability group at Capital One. His responsibilities include Monitoring Governance effort, building the Governance framework, mobilizing all monitoring data to Data Lake for various consumption purposes (Machine Learning, Visualization, Governance etc.) and managing the Infrastructure Monitoring Platforms.",
      "title": "How Capital One used a Data Driven approach and Governance to improve their observability in the Cloud",
      "abstract": "",
      "video": "",
      "slides": "",
      "hash": "bfb01caa13143772b4895a4f31729b0f",
    },
    {
      "name": "Ryan Lopopolo",
      "github": "lopopolo",
      "gitlab": "",
      "twitter": "",
      "bio": "Ryan founded and led Stripe's Efficiency Engineering team, which focuses on improving the efficiency and rigor of infrastructure decisions through data, reporting, and tooling. Ryan has worked on ETLs for cost attribution, infrastructure for capacity forecasting, and observability for costs, all to help find areas to optimize Stripe's cloud. These systems provide visibility to engineers, product, and leadership and are used to drive organizational initiatives.",
      "title": "The AWS Billing Machine and Optimizing Cloud Costs",
      "abstract": "",
      "video": "https://vimeo.com/341148381",
      "slides": "https://monitorama.slack.com/files/UJM2D3DCZ/FK83H3N6R/monitorama_-_the_aws_billing_machine_and_optimizing_cloud_costs.pdf",
      "hash": "22a6a3196f3c0b83c5cb9513be025921",
    },
    {
      "name": "Martin Mao",
      "github": "martin-mao",
      "gitlab": "",
      "twitter": "",
      "bio": "Martin is a founding member of the metrics team at Uber and currently leads the development and SRE teams that build and maintain the M3 metrics platform.",
      "title": "How to get the 30,000 ft view, 1 ft view and everything in between without breaking the bank!",
      "abstract": "",
      "video": "https://vimeo.com/341146220",
      "slides": "https://www.slideshare.net/MartinMao/monitorama-2019-pdx-martin-mao",
      "hash": "91e4b06266c607b28ca427eb1d132f5c",
    },
    {
      "name": "Andrew Newdigate",
      "github": "",
      "gitlab": "andrewn",
      "twitter": "suprememoocow",
      "bio": "Andrew is a staff engineer in the Infrastructure team at GitLab, where he helps keep GitLab.com available, observable and scaling. Before GitLab, he cofounded the developer community site Gitter in 2012, and was CTO there until Gitter's acquisition by GitLab in 2017. After living in London in the UK for 17 years, he recently relocated back to his hometown of Cape Town in South Africa.",
      "title": "Practical Anomaly Detection using Prometheus",
      "abstract": "",
      "video": "https://vimeo.com/341141334",
      "slides": "https://speakerdeck.com/suprememoocow/anomaly-detection-using-prometheus",
      "hash": "30a84ee7025f084bba4102cdc8a24b59",
    },
    {
      "name": "Joe Ross",
      "github": "",
      "gitlab": "",
      "twitter": "robusteza",
      "bio": "Joe is a data scientist at SignalFx, where he focuses on time series problems (anomaly detection, forecasting, correlation) that arise in monitoring. He holds a PhD in mathematics from Columbia University and was a researcher and instructor in pure mathematics, most recently at the University of Southern California. He has nine publications in peer-reviewed mathematics/statistics journals and has given talks about his research at conferences and universities throughout the world.",
      "title": "Statistical Aspects of Distributed Tracing",
      "abstract": "",
      "video": "https://vimeo.com/341144023",
      "slides": "https://www.slideshare.net/secret/INwmsyntwaBbx7",
      "hash": "2c45622ba5e0df7c693b15107d1ef3f5",
    },
    {
      "name": "Amit Sheth",
      "github": "",
      "gitlab": "",
      "twitter": "",
      "bio": "Amit Sheth is a Lead Software Engineer/Product Manager at Capital One. He is currently building products which combine a variety of data sources from different monitoring sources and use machine learning techniques to predict outages and perform root cause analysis for incidents. Previously, he was a Platform Manager and Product Owner of several Enterprise Monitoring and ETL tools at Capital One.</br></br>Amit has a Masters Degree in Electrical Engineering from NJIT, USA.",
      "title": "How Capital One used a Data Driven approach and Governance to improve their observability in the Cloud",
      "abstract": "",
      "video": "",
      "slides": "",
      "hash": "47c6a8da21329a922181946e0c43f2a8",
    },
    {
      "name": "Matty Stratton",
      "github": "mattstratton",
      "gitlab": "",
      "twitter": "mattstratton",
      "bio": "Matty Stratton is a DevOps Advocate at PagerDuty, where he helps dev and ops teams advance the practice of their craft and become more operationally mature. He collaborates with PagerDuty customers and industry thought leaders in the broader DevOps community, and back when he drove, his license plate actually said \"DevOps\".</br></br>Matty has over 20 years experience in IT operations, ranging from large financial institutions such as JPMorganChase and internet firms, including Apartments.com. He is a sought-after speaker internationally, presenting at Agile, DevOps, and ITSM focused events, including ChefConf, DevOpsDays, Interop, PINK, and others worldwide. Matty is the founder and co-host of the popular Arrested DevOps podcast, as well as a global organizer of the DevOpsDays set of conferences.</br></br>He lives in San Francisco and has three awesome kids, who he loves just a little bit more than he loves Doctor Who. He is currently on a mission to discover the best pho in the world.",
      "title": "Fight, Flight, or Freeze — Releasing Organizational Trauma",
      "abstract": "",
      "video": "https://vimeo.com/341146590",
      "slides": "https://speaking.mattstratton.com/kF4x1U",
      "hash": "5a17c32166d243cde4bb4ca2f409f7cf",
    },
    {
      "name": "Tom Wilkie",
      "github": "tomwilkie",
      "gitlab": "",
      "twitter": "tom_wilkie",
      "bio": "Tom is a software engineer, Prometheus and Cortex maintainer and VP Product at Grafana Labs. Previous Tom founded Kausal, a company working on Prometheus, and worked at companies such as Weaveworks, Google, Acunu and XenSource. In his spare time, Tom likes to make craft beer and build 3D printers.",
      "title": "Grafana Loki: like Prometheus, but for logs",
      "abstract": "",
      "video": "https://vimeo.com/341149235",
      "slides": "",
      "hash": "ca56982edb5233cc2f1342ceced2ae43",
    },
    {
      "name": "Christine Yen",
      "github": "christineyen",
      "gitlab": "",
      "twitter": "cyen",
      "bio": "Christine Yen is the cofounder of Honeycomb, a startup with a new approach to observability and debugging systems with data. Christine has built systems and products at companies large and small and likes to have her fingers in as many pies as possible. Previously, she built Parse’s analytics product (and leveraged Facebook’s data systems to expand it) and wrote software at a few now-defunct startups.",
      "title": "Observability: Superpowers for Developers",
      "abstract": "",
      "video": "https://vimeo.com/341142053",
      "slides": "https://speakerdeck.com/christineyen/observability-superpowers-for-developers",
      "hash": "c3c49a4d98ec763dc0f3e559bd4baacd",
    },
  ],
  "baltimore": [
    {
      "name": "Riley Berton",
      "github": "rileyberton",
      "gitlab": "",
      "twitter": "rileyberton",
      "bio": "Riley is a Principal SRE at Major League Baseball with over 20 years experience in building complex systems. He has worked on time series databases @circonus, real time streaming data @AppNexus, audio and video recognition systems @viggle, and audio/video call logging systems @eventide before finding a home at baseball. In his spare time you can find him on the baseball field playing or at the baseball field watching.",
      "title": "What’s Your Service’s Batting Average?",
      "abstract": "<p>This talk will go into the details of how to construct these knowledge graphs, dubbed Observability Graphs, to reflect the innate structure (but also the uncertainty) in today’s dynamic infrastructure. Then we will show how the knowledge graphs can be used to power automated alerting, alert clustering, and automated root-cause analysis.</p><p>This talk will cover the creation and ongoing evolution of that system, including:</p><p><ul><li>Open source trace collection (Elastic APM)</li><li>Kafka as a centralized data pipeline for performance and trace data</li><li>Custom trace processing software running on k8s that synthesizes metrics from trace data and makes filtering decisions about which traces to persist using Jaeger</li><li>Log correlation from distributed trace data in Jaeger to Elastic Search</li><li>Visualization and alert generation using Terraform</li><li>Automatic SLO + error budget curation with minimal input from teams</li><li>And the lessons learned along the way</li></ul></p>",
      "video": "",
      "slides": "https://docs.google.com/presentation/d/1PcClb_SNNa9PviLHjOAKC92r3KLMLu2-nu_0larStP0/edit?usp=sharing",
      "hash": "64ea38019d0ab54249b9c1d7fa429db1",
    },
    {
      "name": "Jeff Chao",
      "github": "jeffchao",
      "gitlab": "",
      "twitter": "thejeffchao",
      "bio": "Jeff Chao is a software engineer at Netflix where he works on stream processing engines and observability platforms. Prior to Netflix, he worked at Heroku offering a fully-managed Apache Kafka service. Jeff’s current work involves building and maintaining Mantis, an open source platform that makes it easy for developers to build cost-effective, realtime, operations-focused applications.",
      "title": "Cost-Effective, Realtime Operational Insights Into Production Systems Producing Trillions of Events Per Day",
      "abstract": "<p>At Netflix, we've experienced an unprecedented global increase in membership over the last several years. Not only are we seeing more members globally, more members are consuming more Netflix. This means that production outages today have far greater impact in much less time than it did compared to years before.</p><p>In order to continue providing great experiences for our members, we have to make sure the sophistication of our systems out-pace the growth and engagement of our members. Concretely, our MTTD and MTTR needs to decrease much quicker than Netflix membership and consumption increases. Our approach to accomplishing this is by having access to highly-granular, realtime operational insights into our streaming and studio systems.</p><p>However, while having this level of visibility into our production systems is great, it could quickly become cost-prohibitive. It's equally important that these systems don't end up costing more than our actual streaming and studio systems. To this end, we've built and open sourced Mantis to fulfill all of these needs – a platform that makes it easy for developers to build real-time, cost-effective, operations-focused applications.</p><p>Mantis has been live in production for several years and has given us tremendous value in operating Tier-1 critical systems. It processes trillions of events and petabytes worth of data every day which enables us to derive meaningful operational insights from our streaming and studio systems which ultimately reduce production impact on our members.</p><p>With Mantis, we're able to economically ask and answer new questions in realtime about our systems without having to add new instrumentation. We can answer questions like &quot;Which members are seeing playback issues for Stranger Things, season 3, episode 1 on iPhone in Canada?&quot; without incurring heavy costs to our infrastructure bill.</p><p>In this talk, we'll cover more technical details about Mantis and go through some examples of how we use Mantis to operate our production systems more effectively.</p>",
      "video": "",
      "slides": "https://speakerdeck.com/jeffchao/cost-effective-realtime-operational-insights-into-production-systems-producing-trillions-of-events-per-day",
      "hash": "36c8c39eff09b1cc7d66ee416938441e",
    },
    {
      "name": "Pete Cheslock",
      "github": "petecheslock",
      "gitlab": "",
      "twitter": "petecheslock",
      "bio": "Pete currently is the VP, Products at CHAOSSEARCH. In his spare time, he cooks food, smokes meats, and tweets the successes.",
      "title": "Have we finally reached #monitoringlove?",
      "abstract": "",
      "video": "",
      "slides": "https://pete.wtf/decks/MonitoramaBaltimore2019.pdf",
      "hash": "6f8b01a43eb907d6b473b37724bfc492",
    },
    {
      "name": "Liz Fong-Jones",
      "github": "lizthegrey",
      "gitlab": "",
      "twitter": "lizthegrey",
      "bio": "Liz is a developer advocate, labor and ethics organizer, and Site Reliability Engineer (SRE) with 15+ years of experience. She is an advocate at Honeycomb.io for the SRE and Observability communities, and previously was an SRE working on products ranging from the Google Cloud Load Balancer to Google Flights.</br></br>She lives in Brooklyn with her wife, metamours, and a Samoyed/Golden Retriever mix, and in San Francisco and Seattle with her other partners. She plays classical piano, leads an EVE Online alliance, and advocates for transgender rights as a board member of the National Center for Transgender Equality.",
      "title": "Coalescing systems data without losing fidelity",
      "abstract": "<p>It is not feasible to run an observability infrastructure that is the same size as your production infrastructure. Past a certain scale, the cost to collect, process, and save every log entry, every event, and every trace that your systems generate dramatically outweighs the benefits. If your SLO is 99.95%, then you'll be naively collecting 2,000 times as much data about requests that satisfied your SLI than those that burnt error budget. The question is, how to scale back the flood of data without losing the crucial information your engineering team needs to troubleshoot and understand your system's production behaviors?</p>Statistics can come to our rescue, enabling us to gather accurate, specific, and error-bounded data on our services' top-level performance and inner workings. This talk advocates a three-R approach to data retention: Reducing junk data, statistically Reusing data points as samples, and Recycling data into counters. We can keep the context of the anomalous data flows and cases in our supported services while not allowing the volume of ordinary data to drown it out.</p><p>This talk discusses 4 tactics for coalescing your data to a manageable size: fixed-rate, adaptive rate, and key-based sampling approaches, and counter-based metrics that include exemplars.</p>",
      "video": "",
      "slides": "http://hny.co/liz",
      "hash": "3a97f9de48279f72c0422724024d57b8",
    },
    {
      "name": "Ryan Frantz",
      "github": "RyanFrantz",
      "gitlab": "",
      "twitter": "ryan_frantz",
      "bio": "A breaksmith and storyteller, Ryan feels the social endeavor that is software engineering. He is excited about the possibilities available to software developers as we absorb experiences and research from adjacent domains, such as human factors and cognitive science, and incorporate new practices into our nascent discipline.",
      "title": "Designing Alerts to Direct Attention",
      "abstract": "<p>Automated monitoring and alerting has undoubtedly made _some_ things better for on-call engineers. Still, poorly designed alerts wake them up in the middle of the night when they could benefit from a mental jumpstart. We dream of computers as intelligent agents, possibly as team members within a Joint Cognitive System (JCS) but that is far from reality. Our alerts are primitive capture events, lacking useful context that can help quickly and accurately orient focus and direct the attention of engineers when every minute counts. Given this, how can we better position computers to work with us?</p><p>In this talk we will describe how human attention works, review the properties of better human-computer teaming through a Joint Cognitive System's approach and explore examples of what computer-aided redirecting of attention may look like. The goal is to challenge the audience to think deeply and differently about the tooling that becomes a pivotal part of the on-call experience.</p>",
      "video": "",
      "slides": "https://ryanfrantz.com/talks/designing-alerts-direct-attention/",
      "hash": "e8b2e636d253d9c444e30708f014c225",
    },
    {
      "name": "Alex Hidalgo",
      "github": "ahidalgo",
      "gitlab": "",
      "twitter": "ahidalgosre",
      "bio": "Alex Hidalgo has been a Site Reliability Engineer since 2011. During that time he has developed a deep love for sustainable operations, metrics, and monitoring, and using error budgets to drive almost every decision. Alex's previous jobs have included IT support, network security, restaurant work, t-shirt design, and hosting game shows at bars. When not sharing his passion for technology with others, you can find him scuba diving or watching college basketball. He lives in Brooklyn with his partner Jen and a rescue dog named Taco. Alex has a BA in philosophy from Virginia Commonwealth University.",
      "title": "Developing Meaningful SLIs for Fun and Profit",
      "abstract": "<p>SLIs, SLOs and Error Budgets are all the rage, but outside of the general philosophy of what they are, there isn’t a lot information available about how to implement these concepts. Your SLO, and by extension your Error Budget, is only as useful as your SLI, so let’s learn how to develop good SLIs!</p><p>Developing meaningful SLIs is not an easy task, but your Error Budgets and your SLOs are only useful if they’re informed by good SLIs. In this talk we’ll be performing a deep dive on how to develop SLIs that actually reflect the journeys of your users. We’ll start by describing an example web service that should look familiar to you, identify the “low-hanging fruit” metrics you might be tempted to use, talk about the limitations of these low-hanging fruit, and conclude with some concrete examples of what useful SLIs for such a system might actually look like.</p>",
      "video": "",
      "slides": "",
      "hash": "12a5229a997c3322335ce53f2ba6f02d",
    },
    {
      "name": "Nora Jones",
      "github": "",
      "gitlab": "",
      "twitter": "nora_js",
      "bio": "Nora Jones practices chaos engineering and human factors at Slack and is a student of human factors and systems safety at Lund University. She’s passionate about resilient software, people, and the intersection of those two worlds. She cowrote the book on chaos engineering with her teammates while working at Netflix and keynoted at AWS re:Invent in 2017 to an audience of over 40,000 people about the technical benefits and business case behind implementing chaos engineering.",
      "title": "Before, During, and After Chaos: Creating Foresight through a Cyclic Approach",
      "abstract": "<p>There are key components of chaos engineering beyond building platforms for testing resilience and running game days, which can't be detected by your code. Nora Jones shares three phases to focus individualized attention and forethought on when considering chaos experiments, with a special focus on the time before and after the experiment.</p>",
      "video": "",
      "slides": "",
      "hash": "134967b8b202a412320747801eacf92f",
    },
    {
      "name": "Homin Lee",
      "github": "",
      "gitlab": "",
      "twitter": "",
      "bio": "Homin Lee is a data scientist for Datadog, where he writes algorithms that process hundreds of billions data points a day. Prior to Datadog, Homin built large-scale machine-learning systems at several startups. Homin has a PhD from Columbia University in computational learning theory and was a Computing Innovation Fellow at the University of Texas at Austin.",
      "title": "The Observability Graph: Knowledge Graphs for Automated Infrastructure Observability",
      "abstract": "<p>The complexity and dynamism of distributed systems reflect both the teams that develop them and the products they support. Our observability tools need to be dynamic enough to keep up with our changing infrastructure, flexible enough to take in observability data of all types, yet understand that data well enough to show us only what we care about.</p><p>Knowledge graphs have become an increasingly popular method for storing data as they can explicitly but also flexibly encode the relationships between entities. Using both domain knowledge and user interaction data we can train models to encode the vast amounts of data produced by observability tools into a knowledge graph, discover how they are interlinked, and imbue them with meaning.</p><p>This talk will go into the details of how to construct these knowledge graphs, dubbed Observability Graphs, to reflect the innate structure (but also the uncertainty) in today’s dynamic infrastructure. Then we will show how the knowledge graphs can be used to power automated alerting, alert clustering, and automated root-cause analysis.</p>",
      "video": "",
      "slides": "",
      "hash": "3bb8fe8799a1273f5b07ca2c5b3b126a",
    },
    {
      "name": "Brad Lhotsky",
      "github": "reyjrar",
      "gitlab": "",
      "twitter": "reyjrar",
      "bio": "Brad hacks on Perl for Craigslist. He’s spent a career trying to replace himself with Perl scripts and still has way too much work to do! He’s trying to provide more people with the knowledge and curiosity to better themselves and advance their careers.",
      "title": "ElasticSearch Data Exploration in Your Terminal",
      "abstract": "<p>You've seen the pretty graphs. Visuals are great for signaling there is a problem somewhere in your system. How do you, a command line guru, go from pretty graphs to root cause analysis? Most likely you'll be reaching for paradigms from the command line: composability and a flexible, compact syntax to ask your questions. I'd like to talk more about integrating ElasticSearch-based dashboards back to the command line workflows I love.</p><p>This talk is an overview of a tool I developed while working at Booking.com to drastically reduce the time and complexity of performing incident reponse against rich, structured data in ElasticSearch. It was developed with the help of the security and fraud teams to perform adhoc queries critical for incident response. The tool served the team well and it's been under active development ever since. It continues to grow in capabilities aimed to make adhoc analysis simple, easy, and accessible to hardened command line jockeys and command line newbies.</p><p>Join me to learn how to bring the logging data you love back to your terminal!</p>",
      "video": "",
      "slides": "https://speakerdeck.com/reyjrar/elasticsearch-data-exploration-in-your-terminal  ",
      "hash": "8d96f5c273062cb617255e630fe0705c",
    },
    {
      "name": "Bryan Liles",
      "github": "bryanl",
      "gitlab": "",
      "twitter": "bryanl",
      "bio": "Bryan Liles is an Senior Staff Engineer at VMware. When he is not writing software to help move teams to Kubernetes, he gets to speak at conferences on topics ranging from machine learning to building the next generation of developers. In his free time, Bryan races cars in straight lines and around turns and builds robots and devices.",
      "title": "Traces, metrics, endpoints: The what, why, and how",
      "abstract": "<p>We have so many tools at our disposal. I'm going to tell a story about what these are and how you could potentially use them in your stack.</p>",
      "video": "",
      "slides": "",
      "hash": "21f217fbece2b47ce72cd60ffb32b869",
    },
    {
      "name": "Philip O'Toole",
      "github": "otoolep",
      "gitlab": "",
      "twitter": "general_order24",
      "bio": "Philip O’Toole is an Engineering Manager at Google Pittsburgh. A recent transplant from the Bay Area, he has held various software development and engineering management roles, most recently leading teams building large-scale distributed systems. In particular he was previously Director of Engineering, and part of the core development team, at InfluxDB, an open-source time-series database written in Go. You can find him online at <a href=\"http://www.philipotoole.com/\">http://www.philipotoole.com</a> and <a href=\"https://twitter.com/general_order24\">https://twitter.com/general_order24</a>.",
      "title": "Observing Observability",
      "abstract": "<p>The complexity of the systems we are responsible for has grown significantly over the last decade. High performing teams use monitoring and observability to increase the reliability of these systems. Come along one practitioner's journey and let his observations guide the way you think about, and change, observability practices in your company.</p><p>This talk starts with my early experience on a team struggling with monitoring our new fangled cloud. That experience inspired me to become part of the industry designing and developing the next-generation of monitoring systems. I’ll discuss how every next-gen system in-turn inspires the next monitoring -- and Observability -- paradigm. Let my observations on observability help you think about -- and change -- Observability practices in your company.</p>",
      "video": "",
      "slides": "",
      "hash": "29c9de1f438a43be531d113aecd1a564",
    },
    {
      "name": "Kevin Scaldeferri",
      "github": "kscaldef",
      "gitlab": "",
      "twitter": "kscaldef",
      "bio": "Kevin Scaldeferri is a Principal Software Engineer and Architect for the New Relic Database system. He likes math and distributed systems, and probably says “monoid” too much.",
      "title": "You can’t spell \"monitoring\" without \"monoid\"",
      "abstract": "<p>Well, technically you can, but if you do you’re probably lying to yourself with the data you’re collecting.</p><p>If you care about aggregating your monitoring data over time or across dimensions like hosts or container instances, you care about monoids; you just might not know it! In this talk, I’ll explain what a monoid is (it’s not scary, I promise!) and why they form the basis for scalable telemetry data types. We’ll see how naive approaches to metrics can end up giving you the wrong answers to important questions and how a more mathematically well-founded approach can fix those problems.</p>",
      "video": "",
      "slides": "https://www.slideshare.net/kscaldef/you-cant-spell-monitoring-without-monoid",
      "hash": "6ab94fc1e6b808300f2c30d04826d6b6",
    },
    {
      "name": "Theo Schlossnagle",
      "github": "postwait",
      "gitlab": "",
      "twitter": "postwait",
      "bio": "Theo founded Circonus in 2010, and continues to be its principal architect. After earning undergraduate and graduate degrees from Johns Hopkins University in computer science with a focus on graphics and randomized algorithms in distributed systems, he went on to research resource allocation techniques in distributed systems during four years of post-graduate work. A widely respected industry thought leader, Theo is the author of Scalable Internet Architectures (Sams), has contributed to several other published works, and is a frequent speaker at worldwide IT conferences. Theo is a computer scientist in every respect. Theo is a member of the IEEE and a distinguished member of the ACM. He serves on the editorial board of the ACM's Queue Magazine and ACM's Practitioner Board.",
      "title": "What’s Your Service’s Batting Average?",
      "abstract": "<p>This talk will go into the details of how to construct these knowledge graphs, dubbed Observability Graphs, to reflect the innate structure (but also the uncertainty) in today’s dynamic infrastructure. Then we will show how the knowledge graphs can be used to power automated alerting, alert clustering, and automated root-cause analysis.</p><p>This talk will cover the creation and ongoing evolution of that system, including:</p><p><ul><li>Open source trace collection (Elastic APM)</li><li>Kafka as a centralized data pipeline for performance and trace data</li><li>Custom trace processing software running on k8s that synthesizes metrics from trace data and makes filtering decisions about which traces to persist using Jaeger</li><li>Log correlation from distributed trace data in Jaeger to Elastic Search</li><li>Visualization and alert generation using Terraform</li><li>Automatic SLO + error budget curation with minimal input from teams</li><li>And the lessons learned along the way</li></ul></p>",
      "video": "",
      "slides": "https://docs.google.com/presentation/d/1PcClb_SNNa9PviLHjOAKC92r3KLMLu2-nu_0larStP0/edit?usp=sharing",
      "hash": "f3dcfc96a43a4038d259c4440a83f6a7",
    },
    {
      "name": "Patrick Vinograd",
      "github": "patrickvinograd",
      "gitlab": "",
      "twitter": "vinocorp",
      "bio": "Patrick is a Principal Software Engineer at Ad Hoc, where he helps build digital services that promote the general welfare. He has over a decade of experience building identity systems, messaging platforms, and virtualization infrastructure. He spends his time making computers talk to each other, and making computers not talk to each other.",
      "title": "I have a dumb theory but I can’t find any counter example",
      "abstract": "<p>A post-mortem/fishing story about diagnosing and resolving a major site latency issue in the days leading up to a major relaunch of VA.gov, the home page for the Department of Veterans’ Affairs. Aside from recounting the process of isolating and resolving the issue, the major theme is the virtuous cycle between automation and monitoring - monitoring giving you the insight to know what to change, and automation giving you the confidence to make changes, even on a live production site right before a high-profile launch.</p>",
      "video": "",
      "slides": "",
      "hash": "f2e68862e6c151dc1525257ca8ccdd36",
    },
    {
      "name": "Rosemary Wang",
      "github": "joatmon08",
      "gitlab": "",
      "twitter": "joatmon08",
      "bio": "Rosemary Wang is a developer advocate for HashiCorp. She interfaces with users and partners to find creative open source solutions for infrastructure. An infrastructure automation explorer and cloud enthusiast, Rosemary works to bridge the technical and cultural barriers between infrastructure engineers and application developers. She has talent for solving intractable problems with code, whether this means helping an infrastructure engineer learn to code or an application developer troubleshoot infrastructure failures. When Rosemary is not drawing on whiteboards, she valiantly attempts to hack stacks of various infrastructure systems on her laptop while foraging for tasty victuals (especially pizza) around the world.",
      "title": "What's Fitness Function-Driven Development for Operability?",
      "abstract": "<p>Too often, we leave observability and operability as the last to-do before deploying to production. This results in technical debt, lack of visibility into our system, or too few or many alerts or logs. Instead, how can we use fitness functions to drive the implementation of observability to suit our operational needs?</p><p>Fitness functions in evolutionary architecture allow us to optimize systems to fit our current capabilities. In this talk, we'll start with a basic introduction to the concept of evolutionary architecture and explain the idea of fitness functions. Then, we'll demonstrate an example of how we can use these fitness functions to drive an initial set of logs, alerts, dashboards, and metrics. Finally, we will do some refinement of each fitness function, accounting for alert fatigue and additional operational needs.</p>",
      "video": "",
      "slides": "https://speakerdeck.com/joatmon08/whats-fitness-function-driven-development-for-operability",
      "hash": "92a509aa93ba27fcdefe312b473b90d2",
    },
    {
      "name": "Cory Watson",
      "github": "gphat",
      "gitlab": "",
      "twitter": "gphat",
      "bio": "Cory Watson is Director of Technology, Office of the CTO at SignalFx, leading high impact, customer-focused projects around observability and monitoring. Cory started his journey to observability as an SRE at Twitter, and continued on to found the observability team at Stripe. He is a strong voice in the observability community, through OSS, popular tweets, blog posts and speaking engagements.",
      "title": "Dashboard Renaissance: How dashboards work and how to improve them",
      "abstract": "<p>There are lots of rad tools for monitoring and observability. The humble dashboard facilitates drawing insights from these tools. To that end, we need to think hard about how they are designed! When was the last time you looked at _your_ dashboards with a critical eye to improvement?</p><p>I set out to research the venerable dashboard and, using techniques from the likes of Edward Tufte and Stephen Few, I’ve learned how to make the best dashboards! We’ll talk design, choice of metrics, how to choose visualizations, ways to improve comprehension, and how to get that last mile into *why* a chart looks the way it does. In the end, you’ll have a bunch of great ways to improve your own dashboards at home!</p><p>It’s time for a dashboard renaissance!</p>",
      "video": "",
      "slides": "http://onemogin.com/assets/talks/Dashboard-Renaissance.pdf",
      "hash": "71cf2895e28fd3a575e0b9cdfd4346ea",
    },
    {
      "name": "Peter Zaitsev",
      "github": "",
      "gitlab": "",
      "twitter": "PeterZaitsev",
      "bio": "Peter co-founded Percona in 2006, assuming the role of CEO. Percona helps companies of all sizes maximize their success with MySQL. Percona was named to the Inc. 5000 in 2013. Peter was an early employee at MySQL AB, eventually leading the company's High Performance Group. A serial entrepreneur, Peter co-founded his first startup while attending Moscow State University where he majored in Computer Science. As CEO of Percona, Peter enjoys mixing business leadership with hands on technical expertise. Peter is the co-author of High Performance MySQL published by O'Reilly, one of the most popular books on MySQL performance. Peter blogs regularly on MySQLPerformanceBlog.com and speaks frequently at conferences. Peter lives in North Carolina with his wife and two children. In his spare time, Peter enjoys travel and spending time outdoors.",
      "title": "Using eBPF for Linux Performance Analyses",
      "abstract": "<p>eBPF is one of the most powerful instrumentation frameworks in modern Linux Kernel. In this presentation, we will cover eBPF basics as well as usage of Interactive eBPF tools, showing practical examples when and how they can help to resolve performance problems. Finally, we will look into Cloudflare’s ebpf_exporter and show how you can integrate eBPF with Prometheus for Long Term Monitoring.</p>",
      "video": "",
      "slides": "",
      "hash": "46832d562e0f336f33abba2c583427b8",
    },
  ]
}
